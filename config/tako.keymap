/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        click_layer: click_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "CLICK_LAYER";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&to>;
        };

        l4tapDance: l4tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "L4TAPDANCE";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&to 3>;
        };

        l0tapDance: l0tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "L0TAPDANCE";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&to 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 6>;
        };

        left_par {
            bindings = <&kp LPAR>;
            key-positions = <13 12>;
        };

        right_par {
            bindings = <&kp RPAR>;
            key-positions = <16 17>;
        };

        left_brc {
            bindings = <&kp LBRC>;
            key-positions = <22 23>;
        };

        right_brc {
            bindings = <&kp RBRC>;
            key-positions = <26 27>;
        };

        blsh {
            bindings = <&kp BSLH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&hm LEFT_COMMAND Q  &hm LEFT_ALT W    &hm LEFT_ALT E    &hm LEFT_COMMAND R  &lt 9 T        &lt 9 Y      &hm LEFT_COMMAND U  &hm LEFT_ALT I        &hm LEFT_ALT O         &hm LEFT_CONTROL P
&hm LEFT_COMMAND A  &hm LEFT_SHIFT S  &hm LEFT_SHIFT D  &hm LEFT_COMMAND F  &lt 5 G        &lt 5 H      &hm LEFT_COMMAND J  &hm LEFT_SHIFT K      &hm LEFT_SHIFT L       &hm LEFT_COMMAND SEMICOLON
&hm LEFT_COMMAND Z  &hm LEFT_ALT X    &hm LEFT_ALT C    &hm LEFT_COMMAND V  &lt 9 B        &lt 9 N      &hm LEFT_COMMAND M  &hm LEFT_CONTROL ESC  &hm LSHIFT LEFT_SHIFT  &hm LEFT_COMMAND TAB
                                                        &lt 6 SPACE         &l4tapDance    &l0tapDance  &lt 7 SPACE
            >;
        };

        nav_layer_right {
            bindings = <
&kp NUMBER_1         &kp NUMBER_2             &kp NUMBER_3         &kp NUMBER_4         &kp GRAVE        &kp GRAVE         &hm LEFT_COMMAND LEFT_BRACKET  &hm LEFT_COMMAND UP_ARROW  &hm LEFT_ALT RIGHT_BRACKET  &hm LEFT_CONTROL BACKSPACE
&hm LEFT_COMMAND N5  &hm LEFT_SHIFT NUMBER_6  &hm LEFT_SHIFT N7    &hm LEFT_COMMAND N8  &kp BACKSLASH    &kp BACKSLASH     &hm LEFT_COMMAND LEFT          &hm LEFT_SHIFT DOWN        &hm LEFT_COMMAND RIGHT      &hm LEFT_SHIFT ENTER
&kp MINUS            &hm LEFT_ALT EQUAL       &hm LEFT_CONTROL N9  &kp N0               &kp SLASH        &kp SQT           &hm LEFT_COMMAND SLASH         &hm LEFT_ALT COMMA         &hm LEFT_SHIFT PERIOD       &hm LEFT_COMMAND LEFT_COMMAND
                                                                   &trans               &trans           &click_layer 4 0  &none
            >;
        };

        nav_layer_left {
            bindings = <
&hm LEFT_CONTROL BACKSPACE  &kp LEFT_BRACKET         &kp UP_ARROW             &kp RIGHT_BRACKET       &kp GRAVE        &none  &kp N1     &kp N2     &kp N3  &kp N4
&hm LEFT_SHIFT ENTER        &hm LEFT_ALT LEFT_ARROW  &hm LEFT_SHIFT DOWN      &hm LEFT_COMMAND RIGHT  &kp BACKSLASH    &none  &kp N5     &kp N6     &kp N7  &kp N8
&hm LEFT_COMMAND SLASH      &hm LEFT_SHIFT COMMA     &hm LEFT_CONTROL PERIOD  &kp SEMICOLON           &kp SQT          &none  &kp MINUS  &kp EQUAL  &kp N9  &kp N0
                                                                              &none                   &none            &none  &none
            >;
        };

        nav_layer2 {
            bindings = <
&kp BACKSPACE                &kp C_VOLUME_DOWN   &kp C_VOLUME_UP       &none                  &none               &kp LEFT_ARROW    &hm LEFT_COMMAND C_VOL_DN  &hm LEFT_COMMAND C_VOL_UP  &hm LEFT_ALT RIGHT  &hm LEFT_CONTROL BACKSPACE
&hm LEFT_CONTROL LEFT_SHIFT  &hm LEFT_ALT LEFT   &hm LEFT_COMMAND UP   &hm LEFT_COMMAND DOWN  &lt 5 RIGHT         &lt 5 LEFT        &hm LEFT_COMMAND DOWN      &hm LEFT_COMMAND UP_ARROW  &hm LEFT_ALT RIGHT  &mo 10
&hm LEFT_COMMAND TAB         &hm LEFT_SHIFT ESC  &hm LEFT_CONTROL TAB  &none                  &none               &none             &kp LEFT_COMMAND           &trans                     &trans              &trans
                                                                       &lt 8 SPACE            &click_layer 4 0    &click_layer 4 0  &trans
            >;
        };

        nav_layer3 {
            bindings = <
&kp P                   &kp O             &kp I                    &kp U                       &kp Y     &kp Y  &kp U               &kp I             &kp O             &kp P
&hm LEFT_COMMAND ENTER  &hm LEFT_SHIFT L  &hm LEFT_SHIFT LC(LEFT)  &hm LEFT_COMMAND LC(RIGHT)  &kp H     &kp H  &hm LEFT_COMMAND J  &hm LEFT_SHIFT K  &hm LEFT_SHIFT L  &hm LEFT_COMMAND ENTER
&trans                  &kp K             &kp J                    &kp M                       &kp N     &kp N  &kp M               &kp COMMA         &kp PERIOD        &kp SLASH
                                                                   &trans                      &trans    &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2     &kp N3  &kp N4                        &none                           &none                      &kp N1                  &kp N2     &kp N3  &kp N4
&kp N5     &kp N6     &kp N7  &kp N8                        &none                           &none                      &kp N5                  &kp N6     &kp N7  &kp N8
&kp MINUS  &kp EQUAL  &kp N9  &kp N0                        &none                           &none                      &kp MINUS               &kp EQUAL  &kp N9  &kp N0
                              &hm LEFT_SHIFT C_VOLUME_DOWN  &hm LEFT_COMMAND C_VOLUME_UP    &hm LEFT_COMMAND C_VOL_DN  &hm LSHIFT C_VOLUME_UP
            >;
        };

        right_layer {
            bindings = <
&hm LEFT_COMMAND P           &hm LEFT_ALT O      &hm LEFT_ALT I        &hm LEFT_COMMAND U  &kp Y     &kp F8  &kp F9      &kp F10   &kp F11   &kp F12
&hm LEFT_COMMAND LEFT_SHIFT  &hm LSHIFT L        &hm LEFT_SHIFT K      &hm LEFT_COMMAND J  &kp H     &kp F3  &kp F4      &kp F5    &kp F6    &kp F7
&hm LEFT_COMMAND TAB         &hm LEFT_SHIFT ESC  &hm LEFT_CONTROL TAB  &hm LEFT_COMMAND M  &kp N     &kp F1  &kp F2      &kp LBKT  &kp RBKT  &kp DELETE
                                                                       &none               &trans    &none   &kp INSERT
            >;
        };

        left_layer {
            bindings = <
&kp F1               &kp F2             &kp F3               &kp F4               &kp F12       &kp T  &kp R               &hm LEFT_ALT E    &hm LEFT_ALT W    &kp Q
&hm LEFT_COMMAND F5  &hm LEFT_SHIFT F6  &hm LEFT_SHIFT F7    &hm LEFT_COMMAND F8  &kp F11       &kp G  &hm LEFT_COMMAND F  &hm LEFT_SHIFT D  &hm LEFT_SHIFT S  &hm LEFT_COMMAND A
&kp LEFT_BRACKET     &kp RIGHT_BRACKET  &hm LEFT_CONTROL F9  &kp F10              &kp DELETE    &kp B  &hm LEFT_COMMAND V  &hm LEFT_ALT C    &hm LEFT_ALT X    &hm LEFT_COMMAND Z
                                                             &kp INS              &trans        &none  &none
            >;
        };

        right_layer2 {
            bindings = <
&kp Q               &kp W             &kp E             &kp R                      &kp T                     &kp Y  &kp U  &kp I  &kp O  &kp P
&hm LEFT_COMMAND A  &hm LEFT_SHIFT S  &hm LEFT_SHIFT D  &hm LEFT_COMMAND F         &kp G                     &kp H  &kp J  &kp K  &kp L  &none
&hm LEFT_COMMAND Z  &hm LEFT_ALT X    &hm LEFT_ALT C    &hm LEFT_COMMAND V         &kp B                     &kp N  &kp M  &kp P  &kp Z  &none
                                                        &hm LEFT_ALT LEFT_COMMAND  &hm LEFT_COMMAND SPACE    &none  &kp P
            >;
        };

        char_layer {
            bindings = <
&trans  &kp LBKT   &kp RBKT  &trans  &trans    &trans  &trans  &kp LBKT   &kp RBKT  &kp BSLH
&trans  &trans     &trans    &trans  &trans    &trans  &trans  &kp APOS   &kp SEMI  &kp GRAVE
&trans  &kp COMMA  &kp DOT   &trans  &trans    &trans  &trans  &kp COMMA  &kp DOT   &kp FSLH
                             &trans  &trans    &trans  &trans
            >;
        };

        layer_11 {
            bindings = <
&kp P                   &kp O             &kp I                    &kp U                       &kp Y     &kp Y  &kp U                      &kp I                     &kp O             &kp P
&hm LEFT_COMMAND ENTER  &hm LEFT_SHIFT L  &hm LEFT_SHIFT LC(LEFT)  &hm LEFT_COMMAND LC(RIGHT)  &kp H     &kp H  &hm LEFT_COMMAND LC(LEFT)  &hm LEFT_SHIFT LC(RIGHT)  &hm LEFT_SHIFT L  &hm LEFT_COMMAND ENTER
&trans                  &kp K             &kp J                    &kp M                       &kp N     &kp N  &kp M                      &kp J                     &kp K             &trans
                                                                   &trans                      &trans    &none  &none
            >;
        };
    };
};
