/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        click_layer: click_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "CLICK_LAYER";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&to>;
        };

        l2_tapDance: l2_tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "L2_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&lt 6 SPACE>, <&to 7>;
        };

        r1_tapDance: r1_tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "R1_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LEFT_SHIFT>;
        };

        l1_tapDance: l1_tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "L1_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&lt 10 ESCAPE>, <&to 7>;
        };

        r2_tapDance: r2_tapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "R2_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp ESC>;
        };

        changed_sen: changed_sen {
            compatible = "zmk,behavior-mod-morph";
            label = "CHANGED_SEN";
            bindings = <&kp SEMICOLON>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_RCTL|MOD_LCTL|MOD_LGUI)>;
            keep-mods = <(MOD_RGUI|MOD_LCTL|MOD_LGUI|MOD_RCTL)>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&changed_sen>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        new_behavior1: new_behavior1 {
            compatible = "zmk,behavior-caps-word";
            label = "NEW_BEHAVIOR1";
            #binding-cells = <0>;
            continue-list = <LEFT_COMMAND>;
        };

        com_macro: com_macro {
            compatible = "zmk,behavior-hold-tap";
            label = "COM_MACRO";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&new_behavior1>, <&kp>;
        };

        con_macro: con_macro {
            compatible = "zmk,behavior-hold-tap";
            label = "CON_MACRO";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&ew_con_macro>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 6>;
        };

        left_par {
            bindings = <&kp LPAR>;
            key-positions = <13 12>;
        };

        right_par {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 17>;
        };

        left_brc {
            bindings = <&kp LBRC>;
            key-positions = <22 23>;
        };

        right_brc {
            bindings = <&kp RBRC>;
            key-positions = <26 27>;
        };

        blsh {
            bindings = <&kp BSLH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 17>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
        };
    };

    macros {
        ew_com_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2 &kp LEFT_COMMAND>,
                <&macro_pause_for_release>;

            label = "NEW_MACRO";
        };

        ew_con_macro: dddd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 2 &kp LEFT_CONTROL>;
            label = "DDDD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_right {
            bindings = <
&lt 15 Q        &kp W           &kp E           &kp R                &kp T                     &kp Y    &kp U           &kp I         &kp O             &lt 15 P
&lt 3 A         &lt 3 S         &lt 3 D         &lt 3 F              &lt 9 G                   &lt 9 H  &lt 2 J         &lt 1 K       &hm LEFT_SHIFT L  &hm LEFT_COMMAND SEMICOLON
&hm LEFT_ALT Z  &hm LEFT_ALT X  &hm LEFT_ALT C  &hm LEFT_ALT V       &kp B                     &kp N    &hm LEFT_ALT M  &r1_tapDance  &r2_tapDance      &lt 17 SLASH
                                                &lt 10 LEFT_COMMAND  &hm LEFT_COMMAND SPACE    &mo 5    &lt 11 SPACE
            >;
        };

        r_ctrl_layer {
            bindings = <
&lt 15 Q            &kp W           &kp E               &kp R               &kp T                     &kp Y    &kp U               &kp I         &kp O             &lt 15 P
&lt 3 A             &lt 3 S         &lt 3 D             &hm LEFT_COMMAND F  &lt 9 G                   &lt 9 H  &hm LEFT_COMMAND J  &none         &hm LEFT_SHIFT L  &kp LC(TAB)
&hm LEFT_COMMAND Z  &hm LEFT_ALT X  &hm LEFT_CONTROL C  &hm LEFT_ALT V      &kp B                     &kp N    &hm LEFT_ALT M      &r1_tapDance  &r2_tapDance      &lt 17 SLASH
                                                        &lt 10 SPACE        &hm LEFT_COMMAND SPACE    &mo 5    &lt 11 SPACE
            >;
        };

        r_gui_layer {
            bindings = <
&lt 15 Q            &kp W           &kp E               &kp R               &kp T                     &kp Y    &kp U           &kp I               &kp O             &lt 15 P
&lt 3 A             &lt 3 S         &lt 3 D             &hm LEFT_COMMAND F  &lt 9 G                   &lt 9 H  &none           &hm LEFT_COMMAND K  &hm LEFT_SHIFT L  &kp TAB
&hm LEFT_COMMAND Z  &hm LEFT_ALT X  &hm LEFT_CONTROL C  &hm LEFT_ALT V      &kp B                     &kp N    &hm LEFT_ALT M  &r1_tapDance        &r2_tapDance      &lt 17 SLASH
                                                        &lt 10 SPACE        &hm LEFT_COMMAND SPACE    &mo 5    &lt 11 SPACE
            >;
        };

        shift_layer {
            bindings = <
&kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)    &kp LS(Y)  &kp LS(U)  &kp LS(I)      &kp LS(O)    &kp LS(P)
&kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)    &kp LS(H)  &kp LS(J)  &kp LS(K)      &kp LS(L)    &kp LS(SEMI)
&kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)    &kp LS(N)  &kp LS(M)  &kp LS(COMMA)  &kp LS(DOT)  &kp LS(FSLH)
                                 &trans     &trans       &trans     &trans
            >;
        };

        default_layer_left {
            bindings = <
&hm LEFT_COMMAND Q  &hm LEFT_ALT W    &hm LEFT_ALT E    &hm LEFT_COMMAND R  &lt 13 T        &lt 13 Y      &hm LEFT_COMMAND U  &hm LEFT_ALT I        &hm LEFT_ALT O         &hm LEFT_CONTROL P
&hm LEFT_COMMAND A  &hm LEFT_SHIFT S  &hm LEFT_SHIFT D  &hm LEFT_COMMAND F  &lt 9 G         &lt 9 H       &hm LEFT_COMMAND J  &hm LEFT_SHIFT K      &hm LEFT_SHIFT L       &hm LEFT_COMMAND SEMICOLON
&hm LEFT_COMMAND Z  &hm LEFT_ALT X    &hm LEFT_ALT C    &hm LEFT_COMMAND V  &lt 13 B        &lt 13 N      &hm LEFT_COMMAND M  &hm LEFT_CONTROL ESC  &hm LSHIFT LEFT_SHIFT  &hm LEFT_COMMAND TAB
                                                        &lt 10 SPACE        &l2_tapDance    &r1_tapDance  &lt 11 SPACE
            >;
        };

        nav_layer_right {
            bindings = <
&kp NUMBER_1        &kp NUMBER_2             &kp NUMBER_3         &kp NUMBER_4       &kp GRAVE        &kp GRAVE         &hm LEFT_COMMAND LEFT_SHIFT  &hm LEFT_CONTROL UP_ARROW  &hm LEFT_ALT ESC              &kp BACKSPACE
&hm LEFT_SHIFT N5   &hm LEFT_SHIFT NUMBER_6  &hm LEFT_SHIFT N7    &hm LEFT_SHIFT N8  &kp BACKSLASH    &kp BACKSLASH     &hm LEFT_SHIFT LEFT          &hm LEFT_COMMAND DOWN      &hm LEFT_COMMAND RIGHT_ARROW  &hm LEFT_SHIFT ENTER
&hm LEFT_ALT MINUS  &kp EQUAL                &hm LEFT_CONTROL N9  &hm LEFT_ALT N0    &none            &kp SQT           &none                        &kp LEFT_BRACKET           &kp RIGHT_BRACKET             &kp LEFT_CONTROL
                                                                  &trans             &trans           &click_layer 8 0  &none
            >;
        };

        nav_layer_left {
            bindings = <
&hm LEFT_CONTROL BACKSPACE  &kp LEFT_BRACKET         &kp UP_ARROW             &kp RIGHT_BRACKET       &kp GRAVE        &none  &kp N1     &kp N2     &kp N3  &kp N4
&hm LEFT_SHIFT ENTER        &hm LEFT_ALT LEFT_ARROW  &hm LEFT_SHIFT DOWN      &hm LEFT_COMMAND RIGHT  &kp BACKSLASH    &none  &kp N5     &kp N6     &kp N7  &kp N8
&hm LEFT_COMMAND SLASH      &hm LEFT_SHIFT COMMA     &hm LEFT_CONTROL PERIOD  &kp SEMICOLON           &kp SQT          &none  &kp MINUS  &kp EQUAL  &kp N9  &kp N0
                                                                              &none                   &none            &none  &none
            >;
        };

        nav_layer2 {
            bindings = <
&kp BACKSPACE         &kp C_VOLUME_DOWN   &kp C_VOLUME_UP              &none                  &none               &kp LEFT_ARROW       &hm LEFT_COMMAND C_VOL_UP  &hm LEFT_COMMAND UP_ARROW    &hm LEFT_ALT UP_ARROW          &lt 14 BACKSPACE
&lt 14 ENTER          &hm LEFT_ALT LEFT   &hm LEFT_COMMAND UP          &hm LEFT_COMMAND DOWN  &lt 9 RIGHT         &lt 9 C_VOLUME_DOWN  &hm LEFT_COMMAND DOWN      &hm LEFT_COMMAND UP_ARROW    &hm LEFT_COMMAND LEFT_COMMAND  &hm LEFT_SHIFT ENTER
&hm LEFT_COMMAND TAB  &hm LEFT_SHIFT ESC  &hm LEFT_CONTROL LEFT_SHIFT  &kp LEFT_COMMAND       &none               &none                &kp LEFT_COMMAND           &hm LEFT_CONTROL LEFT_SHIFT  &hm LEFT_SHIFT ESC             &kp TAB
                                                                       &lt 12 SPACE           &click_layer 8 0    &click_layer 8 0     &trans
            >;
        };

        nav_layer3 {
            bindings = <
&kp P                   &kp O             &kp I             &kp U               &kp Y     &kp Y  &kp U               &kp I             &kp O             &kp P
&hm LEFT_COMMAND ENTER  &hm LEFT_SHIFT L  &hm LEFT_SHIFT K  &hm LEFT_COMMAND J  &kp H     &kp H  &hm LEFT_COMMAND J  &hm LEFT_SHIFT K  &hm LEFT_SHIFT L  &hm LEFT_COMMAND ENTER
&trans                  &trans            &trans            &hm LEFT_COMMAND M  &kp N     &kp N  &kp M               &kp COMMA         &kp PERIOD        &kp SLASH
                                                            &trans              &trans    &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2     &kp N3  &kp N4                        &none                           &none                      &kp N1                  &kp N2     &kp N3  &kp N4
&kp N5     &kp N6     &kp N7  &kp N8                        &none                           &none                      &kp N5                  &kp N6     &kp N7  &kp N8
&kp MINUS  &kp EQUAL  &kp N9  &kp N0                        &none                           &none                      &kp MINUS               &kp EQUAL  &kp N9  &kp N0
                              &hm LEFT_SHIFT C_VOLUME_DOWN  &hm LEFT_COMMAND C_VOLUME_UP    &hm LEFT_COMMAND C_VOL_DN  &hm LSHIFT C_VOLUME_UP
            >;
        };

        function_layer_left {
            bindings = <
&hm LEFT_COMMAND P      &hm LEFT_ALT O      &hm LEFT_ALT I               &hm LEFT_COMMAND U  &kp Y     &kp F8    &kp F9      &kp F10           &kp F11            &kp F12
&hm LEFT_COMMAND ENTER  &hm LSHIFT L        &hm LEFT_SHIFT K             &hm LEFT_COMMAND J  &kp H     &kp BSLH  &kp GRAVE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON
&hm LEFT_COMMAND TAB    &hm LEFT_SHIFT ESC  &hm LEFT_CONTROL LEFT_SHIFT  &hm LEFT_COMMAND M  &kp N     &kp SQT   &kp F2      &kp COMMA         &kp PERIOD         &kp SLASH
                                                                         &none               &trans    &none     &kp INSERT
            >;
        };

        function_layer_right {
            bindings = <
&kp F1             &kp F2             &kp F3               &kp F4             &kp F12       &kp T  &hm LEFT_COMMAND R  &hm LEFT_ALT E    &hm LEFT_ALT W    &hm LEFT_COMMAND Q
&hm LEFT_SHIFT F5  &hm LEFT_ALT F6    &hm LEFT_ALT F7      &hm LEFT_SHIFT F8  &kp F11       &kp G  &hm LEFT_COMMAND F  &hm LEFT_SHIFT D  &hm LEFT_SHIFT S  &hm LEFT_COMMAND A
&kp LEFT_BRACKET   &kp RIGHT_BRACKET  &hm LEFT_CONTROL F9  &kp F10            &kp DELETE    &kp B  &hm LEFT_COMMAND V  &hm LEFT_ALT C    &hm LEFT_ALT X    &hm LEFT_COMMAND Z
                                                           &trans             &trans        &none  &none
            >;
        };

        right_layer2 {
            bindings = <
&kp Q               &kp W             &kp E             &kp R                      &kp T                     &kp Y  &kp U  &kp I  &kp O  &kp P
&hm LEFT_COMMAND A  &hm LEFT_SHIFT S  &hm LEFT_SHIFT D  &hm LEFT_COMMAND F         &kp G                     &kp H  &kp J  &kp K  &kp L  &none
&hm LEFT_COMMAND Z  &hm LEFT_ALT X    &hm LEFT_ALT C    &hm LEFT_COMMAND V         &kp B                     &kp N  &kp M  &kp P  &kp Z  &none
                                                        &hm LEFT_ALT LEFT_COMMAND  &hm LEFT_COMMAND SPACE    &none  &kp P
            >;
        };

        char_layer {
            bindings = <
&trans  &kp LBKT   &kp RBKT  &trans  &trans    &trans  &trans  &kp LBKT   &kp RBKT  &kp BSLH
&trans  &trans     &trans    &trans  &trans    &trans  &trans  &kp APOS   &kp SEMI  &kp GRAVE
&trans  &kp COMMA  &kp DOT   &trans  &trans    &trans  &trans  &kp COMMA  &kp DOT   &kp FSLH
                             &trans  &trans    &trans  &trans
            >;
        };

        layer_11 {
            bindings = <
&kp P                   &kp O             &kp I                    &kp U                       &kp Y     &kp Y  &kp U                      &kp I                     &kp RC(RIGHT)     &kp P
&hm LEFT_COMMAND ENTER  &hm LEFT_SHIFT L  &hm LEFT_SHIFT LC(LEFT)  &hm LEFT_COMMAND LC(RIGHT)  &kp H     &kp H  &hm LEFT_COMMAND LC(LEFT)  &hm LEFT_SHIFT LC(RIGHT)  &hm LEFT_SHIFT L  &hm LEFT_COMMAND ENTER
&trans                  &kp K             &kp J                    &kp M                       &kp N     &kp N  &kp M                      &kp J                     &kp K             &trans
                                                                   &trans                      &trans    &none  &none
            >;
        };

        layer_12 {
            bindings = <
&none   &hm LEFT_ALT LEFT      &hm LEFT_CONTROL UP_ARROW    &hm LEFT_COMMAND RIGHT  &kp C_VOL_UP         &kp C_VOL_UP       &hm LEFT_COMMAND LEFT_ARROW  &hm LEFT_CONTROL UP_ARROW  &hm LEFT_ALT RIGHT             &none
&none   &hm LEFT_COMMAND LEFT  &hm LEFT_COMMAND DOWN_ARROW  &hm LEFT_SHIFT RIGHT    &kp C_VOLUME_DOWN    &kp C_VOLUME_DOWN  &hm LEFT_SHIFT LEFT          &hm LEFT_COMMAND DOWN      &hm RIGHT_COMMAND RIGHT_ARROW  &none
&trans  &none                  &kp C_VOL_DN                 &kp C_VOLUME_UP         &none                &none              &kp C_VOLUME_DOWN            &kp C_VOLUME_UP            &none                          &trans
                                                            &trans                  &trans               &trans             &trans
            >;
        };

        layer_13 {
            bindings = <
&hm LEFT_COMMAND P      &hm LEFT_ALT O      &hm LEFT_ALT I               &hm LEFT_COMMAND U  &kp Y     &kp F8  &kp F9      &kp F10   &kp F11   &kp F12
&hm LEFT_COMMAND ENTER  &hm LSHIFT L        &hm LEFT_SHIFT K             &hm LEFT_COMMAND J  &kp H     &kp F3  &kp F4      &kp F5    &kp F6    &kp F7
&hm LEFT_COMMAND TAB    &hm LEFT_SHIFT ESC  &hm LEFT_CONTROL LEFT_SHIFT  &hm LEFT_COMMAND M  &kp N     &kp F1  &kp F2      &kp LBKT  &kp RBKT  &kp DELETE
                                                                         &none               &trans    &none   &kp INSERT
            >;
        };

        layer_14 {
            bindings = <
&kp NUMBER_1         &kp NUMBER_2             &kp NUMBER_3         &kp NUMBER_4         &kp GRAVE        &none              &none      &none          &none      &none
&hm LEFT_COMMAND N5  &hm LEFT_SHIFT NUMBER_6  &hm LEFT_ALT N7      &hm LEFT_COMMAND N8  &kp BACKSLASH    &kp TILDE          &kp GRAVE  &kp BACKSLASH  &kp PIPE   &none
&hm LEFT_ALT MINUS   &kp EQUAL                &hm LEFT_CONTROL N9  &hm LEFT_ALT N0      &none            &kp DOUBLE_QUOTES  &kp SQT    &kp SEMICOLON  &kp COLON  &none
                                                                   &trans               &trans           &click_layer 8 0   &none
            >;
        };
    };
};
